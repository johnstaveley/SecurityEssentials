@model SecurityEssentials.ViewModel.RecoverPasswordViewModel
@{
    ViewBag.Title = "Recover Password";
    ViewBag.Active = "Home";
}

@using (Html.BeginForm("RecoverPassword", "Account", FormMethod.Post, FormMethod.Post, new {autocomplete = "off"}))
{
    @Html.ValidationSummary(true)
    @Html.AntiForgeryToken()

    <div class="container">
        <div class="row">
            <div class="col-md-12">
                <h2>Recover your password</h2>
            </div>
        </div>
        <div class="row">
            <div class="col-md-3 col-md-offset1">Change the password for</div>
            <div class="col-md-4">@Html.DisplayFor(model => model.UserName)</div>
        </div>
        <div class="row">
            <div class="col-md-3 col-md-offset1">@Html.LabelFor(model => model.SecurityQuestion)</div>
            <div class="col-md-4">@Html.DisplayFor(model => model.SecurityQuestion)</div>
            <div class="col-md-4">&nbsp;</div>
        </div>
        <div class="row">
            <div class="col-md-3 col-md-offset1">@Html.LabelFor(model => model.SecurityAnswer)</div>
            <div class="col-md-4">@Html.PasswordFor(model => model.SecurityAnswer, new {Class = "form-control", autocomplete = "off", maxlength = 40})</div>
            <div class="col-md-4">@Html.ValidationMessageFor(model => model.SecurityAnswer)</div>
        </div>
        <div class="row">
            <div class="col-md-3 col-md-offset1">@Html.LabelFor(model => model.Password)</div>
            <div class="col-md-4">@Html.EditorFor(model => model.Password, new {@class = "form-control", autocomplete = "off"})</div>
            <div class="col-md-4">@Html.ValidationMessageFor(model => model.Password)</div>
        </div>
        <div class="row">
            <div class="col-md-3 col-md-offset1">@Html.LabelFor(model => model.ConfirmPassword)</div>
            <div class="col-md-4">@Html.EditorFor(model => model.ConfirmPassword, new {@class = "form-control", autocomplete = "off"})</div>
            <div class="col-md-4">@Html.ValidationMessageFor(model => model.ConfirmPassword)</div>
        </div>
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.PasswordResetToken)
        @Html.HiddenFor(model => model.UserName)
        <div class="row">
            <div class="col-md-12">&nbsp;</div>
        </div>
        @if (Model.HasRecaptcha)
        {
            <div class="row">
                <div class="col-md-4">Enter the figures you see in the box shown</div>
                <div class="col-md-4 col-md-offset-4">
                    @Html.Partial("_Recaptcha")
                </div>
            </div>
        }
        <div class="row">
            <div class="col-md-2 col-md-offset-2">@Html.ActionLink("Cancel", "LogOn", null, new {@class = "btn", accesskey = "c"})</div>
            <div class="col-md-2 col-md-offset-6">
                <input id="submit" type="submit" value="Update" accesskey="u" class="btn btn-primary"/>
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}